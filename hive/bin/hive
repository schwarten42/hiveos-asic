#!/hive/sbin/bash


#
# Copyright (C) 2016-2020  Hiveon
# Distributed under GNU GENERAL PUBLIC LICENSE 2.0
# License information can be found in the LICENSE file or at https://github.com/minershive/hiveos-asic/blob/master/LICENSE.txt
#


# __    __         __                  _                                            _                      _
#/ / /\ \ \___    /__\ ___  __ _ _   _(_)_ __ ___     /\/\   ___  _ __ ___    /\/\ (_)_ __   ___ _ __ __ _| |___
#\ \/  \/ / _ \  / \/// _ \/ _\`| | | | | '__/ _ \   /    \ / _ \| '__/ _ \  /    \| | '_ \ / _ \ '__/ _\`| / __|
# \  /\  /  __/ / _  \  __/ (_| | |_| | | | |  __/  / /\/\ \ (_) | | |  __/ / /\/\ \ | | | |  __/ | | (_| | \__ \
#  \/  \/ \___| \/ \_/\___|\__, |\__,_|_|_|  \___|  \/    \/\___/|_|  \___| \/    \/_|_| |_|\___|_|  \__,_|_|___/
#                             |_|
[[ ! "$PATH" =~ (^|:)/hive/bin:/hive/sbin(:|$) ]] && export PATH="$PATH:/hive/bin:/hive/sbin" # add only if not exist
export LD_LIBRARY_PATH=/hive/lib

#ASIC_MODEL=`sed -n 2p /usr/bin/compile_time`
source asic-model

if [[ "$ASIC_MODEL" =~ "Toddminer C1" ]]; then
	[[ $(echo $PATH | tr ":" "\n" | grep -c "^/sbin") -eq 0 ]] && export PATH=$PATH:/sbin:/usr/sbin
fi

date

#ls -l /var/volatile/tmp/

function echo2 {
	#echo -e "$1" >> /tmp/hive.boot.log
	echo -e "$1"
}

if [[ $ASIC_MODEL =~ "Antminer D3 Blissz" ]]; then
	ln -s /usr/lib/libcurl-gnutls.so.4 /usr/lib/libcurl.so.5
fi

#Make directory in RAM
mkdir -p /run/hive

#wipe screens. for some reason there can be dead sockets after restart on tmpfs (!!!)
screen -wipe

#ensure we have unix config
dos2unix-safe /hive-config/rig.conf


RIG_CONF="/hive-config/rig.conf"

#[[ -t 1 ]] &&
source colors #use them anyway

uname=`uname -a`

msg="$( cat <<-EOF
	$uname
	$BYELLOW
	 _______ _______ ___ ___ _______
	|   |   |_     _|   |   |    ___|
	|       |_|   |_|   |   |    ___|
	|___|___|_______|\_____/|_______|

	${CYAN}`hostname`${NOCOLOR}
	${BPURPLE}`ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1`${NOCOLOR}

	EOF
)"

echo2 "$msg"


### OpenVPN #############################################################################################
#openvpn-install
#will wait for interface


if [[ $ASIC_MODEL =~ "Antminer S15" || $ASIC_MODEL =~ "Antminer T15" || $ASIC_MODEL == "Antminer S9 SE" || $ASIC_MODEL == "Antminer S9k" ]]; then
	echo2 "> Applying crontab"
	#nohup /hive/sbin/bash -c 'sleep 60; /hive/bin/cron1' > /dev/null 2>&1 &
	#nohup /hive/sbin/bash -c 'sleep 60; /hive/bin/cron2' > /dev/null 2>&1 &
elif [[ $ASIC_MODEL == "Antminer S9" || $ASIC_MODEL =~ "Antminer T9+" || $ASIC_MODEL =~ "Antminer S10" || $ASIC_MODEL =~ "Antminer T9" || $ASIC_MODEL == "Antminer S9i" || $ASIC_MODEL == "Antminer S9j" || $ASIC_MODEL == "Minecenter S9" || $ASIC_MODEL == "Antminer S9 Hydro" || $ASIC_MODEL == "Antminer E3" || $ASIC_MODEL == "Antminer " || $ASIC_MODEL =~ "Antminer S9 (vnish" || $ASIC_MODEL =~ "Antminer S9" || $ASIC_MODEL =~ "Antminer S11" ]]; then
	echo2 "> Applying crontab"
	[[ ! -d /var/spool/cron/crontabs ]] && ln -s /tmp  /var/spool/cron/crontabs
	crontab /hive/etc/crontab.root
	[[ $(ps aux | grep "crond" | grep -v grep | wc -l) -eq 0 ]] &&
	/usr/sbin/crond

	#hosts patch
	touch /tmp/hosts
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/hive/share/S9/lib
	cp /lib/libnss_files.so.2 /hive/share/S9/lib/libnss_files.so.2
	sed -i "s/\/etc\/hosts/\/tmp\/hosts/" /hive/share/S9/lib/libnss_files.so.2

	if [ -z "$HIVEON_VERSION" ]; then
		echo2 "> Patching upgrade"
		cd /www/pages/cgi-bin/
		patch -p10 /www/pages/cgi-bin/upgrade.cgi < /hive/share/S9/upgrade.cgi.patch
	fi
	sed -i '/\#\#\# HIVE HECK \#\#\#/,$d' /config/network.conf
	if [[ -d /hive-config && ! -L /hive-config ]]; then
		mkdir -p /config/hive/hive-config
		mv -f /hive-config /config/hive/
		ln -s /config/hive/hive-config/ /hive-config
	fi
	#ramdisk
	if ! mount | grep ramdisk > /dev/null; then
		mkdir -p /mnt/ramdisk
		mount -t tmpfs -o size=100m tmpfs /mnt/ramdisk
	fi
elif [[ $ASIC_MODEL =~ "Antminer T17" || $ASIC_MODEL =~ "Antminer S17" || $ASIC_MODEL =~ "Antminer X17" ]]; then
	echo2 "> Applying crontab"
	#nohup /hive/sbin/bash -c 'sleep 60; /hive/bin/cron1' > /dev/null 2>&1 &
	#nohup /hive/sbin/bash -c 'sleep 60; /hive/bin/cron2' > /dev/null 2>&1 &

	#hosts patch
	touch /tmp/hosts
	export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/hive/share/S9/lib
	cp /lib/libnss_files.so.2 /hive/share/S9/lib/libnss_files.so.2
	sed -i "s/\/etc\/hosts/\/tmp\/hosts/" /hive/share/S9/lib/libnss_files.so.2

	#enable dmesg timestaps
	echo Y > /sys/module/printk/parameters/time
fi

#test enable MTU autodetect
echo2 "> Enable Path MTU Discovery"
echo 1 > /proc/sys/net/ipv4/tcp_mtu_probing

#test disable avahi-daemon
if [[ $ASIC_MODEL =~ "Antminer" ]]; then
	[ -e /etc/init.d/avahi ] && /etc/init.d/avahi stop
	[ -e /usr/sbin/avahi-daemon ] && mv /usr/sbin/avahi-daemon /usr/sbin/avahi-daemon_back
	ps w | grep avahi | grep -v grep | awk '{print $1}' | xargs kill -9 > /dev/null 2>&1 #/etc/init.d/avahi stop - does not work on some models
fi


if [[ $ASIC_MODEL =~ "WhatsMiner M10" ]]; then
    echo2 "> Applying crontab"
    #[[ ! -d /var/spool/cron/crontabs ]] && ln -s /tmp  /var/spool/cron/crontabs
    crontab /hive/share/whatsminer/crontab.root
    [[ `ps aux | grep "crond" | grep -v grep | wc -l` = 0 ]] &&
            /usr/sbin/crond
fi


echo2 "> Caching host resolve"
cache-hive-ip

echo2 "> Saying hello to server"
hello boot
[[ -e $RIG_CONF ]] &&
	source "$RIG_CONF" #will be needed to start WD later

echo2 "> Starting agent screen"
agent-screen dontattach

echo2 "> Starting controller"
killall controller > /dev/null 2>&1
nohup /hive/sbin/bash -c '/hive/bin/controller >> /config/hive-controller.log 2>&1' > /dev/null 2>&1 &

#bmminer is autostarted after in /etc/rcS.d
#echo2 "> Starting miner"
#miner start
/hive/bin/miner config-gen

echo2 "> Hive Start Finished"
exit 0
